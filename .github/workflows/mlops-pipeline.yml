name: MLOps Pipeline

on:
  push:
    paths:
      - 'audit_data.csv'
      - 'ml_model_training.py'
      - 'main.py'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  train-model:
    name: Model Training and Testing
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Data Quality Check
      run: |
        echo "Verifying data file exists..."
        ls -la audit_data.csv
        echo "Running basic data validation..."
        python -c "
        import pandas as pd
        df = pd.read_csv('audit_data.csv')
        print(f'Dataset contains {len(df)} rows and {len(df.columns)} columns')
        print('Data validation completed')
        "

    - name: Train Model
      run: |
        echo "Starting model training process..."
        python ml_model_training.py
        echo "Model training completed"

    - name: Test API Components
      run: |
        echo "Validating API components..."
        python -c "
        try:
            from main import app
            print('API components validated successfully')
        except Exception as e:
            print(f'API validation failed: {e}')
            exit(1)
        "

  build-containers:
    name: Build Docker Containers
    runs-on: ubuntu-latest
    needs: train-model

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Build MLflow Container
      run: |
        echo "Building MLflow container..."
        docker build -f Dockerfile.mlflow -t audit-mlflow-ci .
        echo "MLflow container build completed"

    - name: Build FastAPI Container
      run: |
        echo "Building FastAPI container..."
        docker build -f Dockerfile.fastapi -t audit-api-ci .
        echo "FastAPI container build completed"

    - name: Container Validation
      run: |
        echo "Validating container functionality..."
        docker run --rm audit-mlflow-ci mlflow --help
        echo "Container validation completed"

  summary:
    name: Pipeline Summary
    runs-on: ubuntu-latest
    needs: [train-model, build-containers]
    if: always()

    steps:
    - name: Report Pipeline Results
      run: |
        echo "MLOps Pipeline Summary"
        echo "================================"
        echo "Model Training: ${{ needs.train-model.result }}"
        echo "Container Build: ${{ needs.build-containers.result }}"
        echo "================================"
        
        if [ "${{ needs.train-model.result }}" == "success" ] && [ "${{ needs.build-containers.result }}" == "success" ]; then
          echo "Pipeline successfully"
          echo "Model trained and containerized"
        else
          echo "Pipeline execution encountered issues"
        fi